name: go-test application CI/CD workflow

on:
  push:
    branches: [ "main" ]

jobs:

  rebuild_reset_restart:

    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3    
  
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.aws_public_key }}
        aws-secret-access-key: ${{ secrets.aws_private_key}}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id:   ecr_login
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and Push to ECR
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        platforms: linux/amd64
        tags: |
          ${{ steps.ecr_login.outputs.registry }}/go-test:${{github.sha}}
          ${{ steps.ecr_login.outputs.registry }}/go-test:latest

    - name: Render Amazon ECS task definition
      id: render-web-container
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: go-test
        image: ${{ steps.ecr_login.outputs.registry }}/go-test:${{github.sha}}
    
    - name: Deploy to Amazon ECS service
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.render-web-container.outputs.task-definition }}
        service: go-test-service
        cluster: go-test-cluster
        wait-for-service-stability: true
